#!/bin/bash

# Set our option variables. 
ALL=false
RECURSIVE=false
VERBOSE=false

# Since getopts doesn't support long options we'll roll our own.
if [ "$1" = "--help" ]; then
    echo -e "Usage: chext [OPTION] FILENAME EXTENSION"\
            "\n  or:  chext [OPTION] EXTENSION1 EXTENSION2"\
            "\n\n  -a\t all, requires two extensions as arguments"\
            "\n\n  -r\t recursive, executes the functionality of chext in all subdirectories"\
            "\n\n  -v\t verbose, lists the file(s) being changed by chext"
    exit 0
fi

# Process optional arguments using getopts.
while getopts ":arv" opt; do
    case $opt in
        a)
            ALL=true
            ;;
        r)
            RECURSIVE=true
            echo "chext: recursive functionality not yet implemented"
            exit 0
            ;;
        v)
            VERBOSE=true
            ;;
        \?)
            echo -e "chext: invalid option --'$OPTARG'"\
                    "\nTry 'chext --help' for more information." >&2
            exit 1
            ;;
        :)
            echo "chext: option -$OPTARG requires an argument" >&2
            exit 1
            ;;
    esac
done

# Shift command line parameters so we can access positional arguments.
shift $((OPTIND - 1))

# Find the basename of the file(s) and the modify extension(s) appropriately.
if $ALL; then
    for file in *.$1
    do
        new_file="${file%.$1}.$2"
        mv "$file" "$new_file"
        if $VERBOSE; then
            echo "chext: '$file' -> '$new_file'"
        fi
    done
else
    new_file="${1%.${1##*.}}.$2"
    mv "$1" "$new_file"
    if $VERBOSE; then
        echo "chext: '$1' -> '$new_file'"
    fi
fi
